parameters:
- name: projectPublishProjPath
  type: string
- name: platform
  type: string
- name: configuration
  type: string
  
stages:
  - stage: Versionning
    jobs:
      - job: set_version
        steps:
          - checkout: self
            persistCredentials: true
            clean: true          
          - task: gitversion/setup@0
            displayName: "GitVersion"
            inputs:
              versionSpec: '5.x'        
          - task: gitversion/execute@0
            inputs:
              useConfigFile: true
              configFilePath: 'GitVersion.yml' 
          - task: PowerShell@2
            displayName: Set the name of the build 
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "vso[build.updatebuildnumber]$(GitVersion.SemVer)"                   
          - task: PowerShell@2
            displayName: tag git repo
            condition: and(succeeded(),  eq(variables['Build.SourceBranch'], 'refs/heads/master'))  
            inputs:
              workingDirectory: $(Build.SourcesDirectory)     
              targetType: 'inline'
              script: |
                echo "Work on $Env:BUILD_SOURCEBRANCHNAME"
                echo "git config"
                git config user.email "CI@labch.onmicrosoft.com"
                git config user.name "CI"
                echo git tag $(GitVersion.MajorMinorPatch)
                git tag "$(GitVersion.MajorMinorPatch)"
                echo push
                git push --set-upstream origin $Env:BUILD_SOURCEBRANCHNAME "$(GitVersion.MajorMinorPatch)"
  - stage: Build_Tests
    jobs:
      - job: build_develop_master
        condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/master')))
        pool:
          name: Hosted VS2017
          demands:
          - msbuild
          - visualstudio
        steps:          
          - task: gitversion/setup@0
            displayName: "GitVersion"
            inputs:
              versionSpec: '5.x'        
          - task: gitversion/execute@0
            inputs:
              useConfigFile: true
              configFilePath: 'GitVersion.yml'  
          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: '**/*.sln'
              feedsToUse: 'select'
              vstsFeed: ''  
          - task: VSBuild@1
            inputs:
              solution: '${{ parameters.projectPublishProjPath}}'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:ApplicationVersion="$(GitVersion.AssemblySemVer)" /p:PublishProfile=FolderProfile /p:publishUrl="$(System.DefaultWorkingDirectory)\publish_output" /p:PackageLocation="$(System.DefaultWorkingDirectory)\publish_output"'
              platform: '${{ parameters.platform}}'
              configuration: '${{ parameters.configuration}}'
              clean: true
              restoreNugetPackages: false 
          - task: VSTest@2
            displayName: "Test"
            inputs:
              solution: '**/*[Tt]ests/*.csproj'
              platform: '${{ parameters.platform}}'
              configuration: '${{ parameters.configuration}}'
              clean: true
              restoreNugetPackages: false 
          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
              includeRootFolder: false
              archiveFile: "$(System.DefaultWorkingDirectory)/$(GitVersion.SemVer).zip"
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(System.DefaultWorkingDirectory)/$(GitVersion.SemVer).zip'
              artifactName: 'drop'
      - job: build_other
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/develop'), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
        pool:
          name: Hosted VS2017
          demands:
          - msbuild
          - visualstudio
        steps:          
          - task: gitversion/setup@0
            displayName: "GitVersion"
            inputs:
              versionSpec: '5.x'        
          - task: gitversion/execute@0
            inputs:
              useConfigFile: true
              configFilePath: 'GitVersion.yml' 
          - task: NuGetCommand@2
            inputs:
              command: 'restore'
              restoreSolution: '**/*.sln'
              feedsToUse: 'select'    
              vstsFeed: ''  
          - task: VSBuild@1
            inputs:
              solution: '**\*.sln'
              platform: '${{ parameters.platform}}'
              configuration: '${{ parameters.configuration}}'
              clean: true
              restoreNugetPackages: false 
          - task: VSTest@2
            displayName: "Test"
            inputs:
              solution: '**/*[Tt]ests/*.csproj'
              platform: '${{ parameters.platform}}'
              configuration: '${{ parameters.configuration}}'
              clean: true
              restoreNugetPackages: false        
